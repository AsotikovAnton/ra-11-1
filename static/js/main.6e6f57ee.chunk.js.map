{"version":3,"sources":["actions/actionCreators.js","actions/actionTypes.js","components/ServiceAdd.js","components/ServiceList.js","components/ServiceChange.js","App.js","reducers/serviceListReducer.js","reducers/serviceAddReducer.js","reducers/serviceChangeReducer.js","reducers/serviseIsLoadingReducer.js","store/index.js","index.js"],"names":["fetchServiceFailure","error","type","payload","fetchServiceSuccess","items","changeServiceInit","data","fetchService","dispatch","a","id","url","process","fetch","response","ok","Error","statusText","json","message","addService","name","price","method","headers","body","JSON","stringify","changeService","content","goBack","console","log","removeService","ServiceAdd","props","useSelector","state","serviceAdd","item","loading","useDispatch","handleChange","event","target","value","nameField","changeAddServiceField","onSubmit","preventDefault","className","onChange","disabled","ServiceList","match","history","serviceList","serviceIsLoadng","isLoading","isError","useEffect","onClick","map","o","key","EditFilled","push","DeleteFilled","handleRemove","ServiceChange","serviceChange","chLoading","chError","useState","firstLoad","setFirstLoad","Number","params","changeServiceField","App","window","location","pathname","path","component","exact","from","to","initialState","reducer","combineReducers","action","removeItem","filter","service","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e6f57ee.chunk.js","sourcesContent":["import { CHANGE_SERVICE_FIELD, CHANGE_ADD_SERVICE_FIELD, CHANGE_SERVICE_CANCEL, FETCH_SERVICES_REQUEST, FETCH_SERVICES_FAILURE, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_END_LOADING, IS_LOADING_REQUEST, IS_LOADING_FAILURE, ADD_SERVICES_REQUEST, ADD_SERVICES_FAILURE, ADD_SERVICES_SUCCESS, CHANGE_SERVICES_REQUEST, CHANGE_SERVICES_FAILURE, CHANGE_SERVICES_SUCCESS, CHANGE_SERVICES_INIT, IS_LOADING_SUCCESS } from './actionTypes';\n\nexport function changeAddServiceField(nameField, value) {\n  return {type: CHANGE_ADD_SERVICE_FIELD, payload: {nameField, value}};\n}\n\nexport function changeServiceField(nameField, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {nameField, value}};\n}\n\nexport function changeServiceCancel () {\n  return {type: CHANGE_SERVICE_CANCEL};\n}\n\nexport function fetchServiceRequest () {\n  return {type: FETCH_SERVICES_REQUEST};\n}\n\nexport function fetchServiceFailure(error) {\n  return {type: FETCH_SERVICES_FAILURE, payload: {error}};\n}\n\nexport function fetchServiceSuccess(items) {\n  return {type: FETCH_SERVICES_SUCCESS, payload: items}\n}\n\nexport function addServiceRequest () {\n  return {type: ADD_SERVICES_REQUEST};\n}\n\nexport function addServiceFailure(error) {\n  return {type: ADD_SERVICES_FAILURE, payload: {error}};\n}\n\nexport function addServiceSuccess() {\n  return {type: ADD_SERVICES_SUCCESS};\n}\n\nexport function changeServiceRequest () {\n  return {type: CHANGE_SERVICES_REQUEST};\n}\n\nexport function changeServiceFailure(error) {\n  return {type: CHANGE_SERVICES_FAILURE, payload: {error}};\n}\n\nexport function changeServiceSuccess() {\n  return {type: CHANGE_SERVICES_SUCCESS};\n}\n\nexport function changeServiceInit(data) {\n  return {type: CHANGE_SERVICES_INIT, payload: data}\n}\n\nexport function fetchServiceEndLoading() {\n  return {type: FETCH_SERVICES_END_LOADING};\n}\n\nexport function isLoadingRequest() {\n  return {type: IS_LOADING_REQUEST};\n}\n\nexport function isLoadingFailure(error) {\n  return {type: IS_LOADING_FAILURE, payload: {error}};\n}\nexport function isLoadingSuccess() {\n  return {type: IS_LOADING_SUCCESS};\n}\n\nexport const fetchService = async (dispatch, id = null) => {\n  dispatch(fetchServiceRequest());\n  const url = id ? `${process.env.REACT_APP_LOCAL_URL}/${id}` : process.env.REACT_APP_LOCAL_URL;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    if (id) {\n      dispatch(changeServiceInit(data));\n    } else {\n      dispatch(fetchServiceSuccess({data}));\n    }\n  } catch (e) {\n    dispatch(fetchServiceFailure({error: e.message}));\n  }\n};\n\nexport const addService = async(dispatch, name, price) => {\n  dispatch(addServiceRequest());\n  try {\n    await fetch(process.env.REACT_APP_LOCAL_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json',\n      },\n        body: JSON.stringify({name, price}),\n    });\n    // eslint-disable-next-line no-undef\n    if (id) {\n      dispatch(changeServiceSuccess());\n    } else {\n      dispatch(addServiceSuccess());\n      fetchService(dispatch);\n    }\n  } catch (e) {\n    dispatch(addServiceFailure(e.message));\n  }\n};\n\nexport const changeService = async (dispatch, id, name, price, content, goBack) => {\n  dispatch(changeServiceRequest());\n  try {\n    // eslint-disable-next-line no-unused-vars\n    const resp = await fetch(process.env.REACT_APP_LOCAL_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json',\n      },\n      body: JSON.stringify({id, name, price, content}),\n    });\n    dispatch(changeServiceSuccess());\n  } catch (e) {\n    console.log(e);\n    dispatch(changeServiceFailure({error: e.message}));\n  }\n}\n\nexport const removeService = async (dispatch, id) => {\n  dispatch(isLoadingRequest());\n  try {\n    await fetch(`${process.env.REACT_APP_LOCAL_URL}/${id}`, {\n      method: 'DELETE',\n    });\n  } catch (e) {\n    dispatch(isLoadingFailure(e.message));\n  } finally {\n    dispatch(isLoadingSuccess());\n    fetchService(dispatch);\n  }  \n};\n","export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_ADD_SERVICE_FIELD = 'CHANGE_ADD_SERVICE_FIELD';\nexport const CHANGE_SERVICE = 'CHANGE_SERVICE';\nexport const CHANGE_SERVICE_CANCEL = 'CHANGE_SERVICE_CANCEL';\nexport const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_FAILURE = 'FETCH_SERVICES_FAILURE';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\nexport const FETCH_SERVICES_END_LOADING = 'FETCH_SERVICES_END_LOADING';\nexport const IS_LOADING_REQUEST = 'IS_LOADING_REQUEST';\nexport const IS_LOADING_FAILURE = 'IS_LOADING_FAILURE';\nexport const IS_LOADING_SUCCESS = 'IS_LOADING_SUCCESS';\nexport const ADD_SERVICES_REQUEST = 'ADD_SERVICES_REQUEST';\nexport const ADD_SERVICES_FAILURE = 'ADD_SERVICES_FAILURE';\nexport const ADD_SERVICES_SUCCESS = 'ADD_SERVICES_SUCCESS';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CHANGE_SERVICES_REQUEST = 'CHANGE_SERVICES_REQUEST';\nexport const CHANGE_SERVICES_FAILURE = 'CHANGE_SERVICES_FAILURE';\nexport const CHANGE_SERVICES_SUCCESS = 'CHANGE_SERVICES_SUCCESS';\nexport const CHANGE_SERVICES_INIT = 'CHANGE_SERVICES_INIT';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeAddServiceField, addService } from '../actions/actionCreators';\n\nexport default function ServiceAdd(props) {\n  const { item, loading, error } = useSelector((state) => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n    dispatch(changeAddServiceField(name, value));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addService(dispatch, item.name, item.price);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <div className=\"error-msg\">Произошла ошибка!</div>}\n      <input name='name' onChange={handleChange} value={item.name} />\n      <input name='price' onChange={handleChange} value={item.price} />\n      {!loading && <button type='submit' disabled={loading}>Save</button>}\n      {loading && <div className='loading'></div>}\n    </form>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, fetchService } from '../actions/actionCreators';\nimport ServiceAdd from './ServiceAdd';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\n\nfunction ServiceList(props) {\n  const { match, history} = props;\n  const { items, loading, error } = useSelector((state) => state.serviceList);\n  // eslint-disable-next-line no-unused-vars\n  const { isLoading, isError } = useSelector((state) => state.serviceIsLoadng);\n  const dispatch = useDispatch();\n\n  useEffect (() => {\n    fetchService(dispatch);\n  },[dispatch])\n\n  const handleRemove = id => {\n    removeService(dispatch, id);\n  };\n\n  const handleChange = (id) => {\n    history.push(`${match.url}/${id}`);\n  };\n\n  const handleRefresh = () => {\n    fetchService(dispatch);\n  };\n\n  if (loading) {\n    return <div className='loading'></div>\n  }\n\n  if (error) {\n    return (\n      <>\n        <div className=\"error-msg\">Произошла ошибка!</div>\n        <div onClick={handleRefresh}>Refresh</div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ServiceAdd />\n      <ul>\n        {items && items.map((o) => <li key={o.id}>\n          {o.name} {o.price}\n          <EditFilled className=\"button btn\" onClick={() => handleChange(o.id)} />\n          <DeleteFilled className=\"button\" onClick={() => handleRemove(o.id)} disabled={isLoading}/>\n        </li>)}\n      </ul>\n    </>\n  );\n}\n\nexport default ServiceList;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, changeService, fetchService } from '../actions/actionCreators';\n\nfunction ServiceChange(props) {\n  const { match, history } = props;\n  const { item, chLoading, chError} = useSelector((state) => state.serviceChange);\n  const { loading, error } = useSelector((state) => state.serviceList);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const dispatch = useDispatch();\n\n  const id = Number(match.params.id);\n\n  useEffect (() => {\n    if (!firstLoad && !chLoading) {\n      history.goBack();\n    }\n    if (firstLoad) {\n      setFirstLoad(false);\n      fetchService(dispatch, id);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[dispatch, chLoading])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    changeService(dispatch, \n      id,\n      item.name,\n      item.price,\n      item.content,\n    );\n  }\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n    dispatch(changeServiceField(name, value))\n  }\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  if (loading) {\n    return <div className='loading'></div>\n  }\n\n  if (error) {\n    return (\n      <div>\n        <div className=\"error-msg\">Произошла ошибка!</div>\n        <div onClick={handleBack}>Назад</div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} disabled={chLoading} className=\"change-form\">\n        <label>Название</label>\n        <input name='name' onChange={handleChange} value={item.name} />\n        <label>Стоимость</label>\n        <input name='price' onChange={handleChange} value={item.price} />\n        <label>Описание</label>\n        <input name='content' onChange={handleChange} value={item.content} />\n        <div className=\"buttons\">\n          <button type='button'onClick={handleCancel}>Отмена</button>\n          {!chLoading && <button type='submit'>Сохранить</button>}\n        </div>\n      </form>\n      {chLoading && <div className='loading'></div>}\n      {chError && <p>{chError.message}</p>}\n    </>\n  )\n}\n\nexport default ServiceChange;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport ServiceList from './components/ServiceList';\nimport ServiceChange from './components/ServiceChange';\n\nexport default function App(props) {\n  const url = window.location.pathname;\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path={`${url}services/:id`} component={ServiceChange} />\n          <Route path={`${url}services`} component={ServiceList} />\n          <Redirect exact from={`${url}`} to={`${url}services`} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n","import { REMOVE_SERVICE, FETCH_SERVICES_REQUEST, FETCH_SERVICES_FAILURE, FETCH_SERVICES_SUCCESS, CHANGE_SERVICES_INIT} from '../actions/actionTypes';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {...state, loading: true, error: null};\n\n    case FETCH_SERVICES_FAILURE:\n      const { error } = action.payload;\n      return {...state, loading: false, error};\n\n    case FETCH_SERVICES_SUCCESS: \n      const { data } = action.payload;\n      return {...state, items: data, loading: false, error: null};\n\n    case REMOVE_SERVICE:\n      const removeItem = action.payload;\n      return state.items.filter((service) => service.id !== removeItem.id);\n\n    case CHANGE_SERVICES_INIT:\n      return {...state, loading: false, error: null};\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_ADD_SERVICE_FIELD, ADD_SERVICES_REQUEST, ADD_SERVICES_SUCCESS, ADD_SERVICES_FAILURE } from '../actions/actionTypes';\n\nconst initialState = {\n  item: { name: '', price: '', },\n  loading: false,\n  error: null,\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_ADD_SERVICE_FIELD:\n      const {nameField, value} = action.payload;\n      return {...state, item: {\n        ...state.item,\n        [nameField]: value\n      }};\n\n    case ADD_SERVICES_REQUEST:\n      return {...state, loading: true, error: null};\n\n    case ADD_SERVICES_SUCCESS:\n      return {...initialState};\n\n    case ADD_SERVICES_FAILURE:\n      const { error } = action.payload;\n      return {...state, loading: false, error}\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_SERVICE_FIELD, CHANGE_SERVICES_REQUEST, CHANGE_SERVICES_FAILURE, CHANGE_SERVICES_SUCCESS, CHANGE_SERVICES_INIT } from '../actions/actionTypes';\n\nconst initialState = {\n  item: {\n    id: '',\n    name: '',\n    price: '',\n    content: '',\n  },\n  chLoading: false,\n  chError: null,\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const {nameField, value} = action.payload;\n      return {...state, item: {\n        ...state.item,\n        [nameField]: value\n      }};\n\n    case CHANGE_SERVICES_REQUEST:\n      return {...state, chLoading: true, chError: null};\n\n    case CHANGE_SERVICES_FAILURE:\n      const { error } = action.payload;\n      return {...state, chLoading: false, chError: error};\n\n    case CHANGE_SERVICES_SUCCESS:\n      return {...initialState};\n\n    case CHANGE_SERVICES_INIT:\n      console.log(action.payload);\n      const { id, name, price, content } = action.payload;\n      return {...state,\n        chLoading: false,\n        chError: null,\n        item: {\n          id,\n          name,\n          price,\n          content\n        }};\n\n    default:\n      return state;\n  }\n}\n","import { IS_LOADING_REQUEST, IS_LOADING_FAILURE, IS_LOADING_SUCCESS } from '../actions/actionTypes';\n\nconst initialState = {\n  isLoading: false,\n  isError: null,\n};\n\nexport default function serviceIsLoadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case IS_LOADING_REQUEST:\n      return {...state, isLoading: true};\n\n    case IS_LOADING_FAILURE:\n      console.log(action.payload);  \n      const { error } = action.payload;\n      return {...state, isLoading: false, isError: error };\n\n    case IS_LOADING_SUCCESS:\n      return {...initialState};\n\n    default:\n      return state;\n  }\n}\n","import {createStore, combineReducers} from 'redux';\nimport serviceListReducer from '../reducers/serviceListReducer';\nimport serviceAddReducer from '../reducers/serviceAddReducer';\nimport serviceChangeReducer from '../reducers/serviceChangeReducer';\nimport serviceIsLoadingReducer from '../reducers/serviseIsLoadingReducer';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n  serviceChange: serviceChangeReducer,\n  serviceIsLoadng: serviceIsLoadingReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}